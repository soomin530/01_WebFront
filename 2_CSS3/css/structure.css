* { /* *은 모든 것을 포함함 */
  box-sizing: border-box;

}

/* body 태그에 기본적으로 적용되어 있는 마진을 없앤다*/
body {
  margin: 0;
}

main {
  width: 1140px;
  margin: auto; /* 좌우 정렬하면서 메인이 가운데로 오게 함*/
}

header {
  height: 200px;
  display: flex;
}

header > section:nth-of-type(1), 
header > section:nth-of-type(3) {
  flex-basis: 15%;
}

header > section:nth-of-type(2) {
  flex-basis: 70%;
  display: flex;
  justify-content: center; /* 메인축 방향으로 가운데 정렬*/
  align-items: center; /* 교차축 가운데 정렬 */
}

/* 로고 영역 부분 */
#home-logo {
  width: 120px;
}

header > section:nth-of-type(1) {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* 검색창 영역 */
.search-area {
  width: 500px;
}

/* fieldset이 section의 후손이라 > 말고 " " 띄어쓰기 */
.search-area fieldset {
  border: 2px solid #455ba8;
  border-radius: 5px; /* 테두리 동그랗게 얼마나 깎을지 숫자로 작성 */
  margin: 0;
  padding: 2px; /* 검색창 안에 가득 차던 placeholer 글씨 여백에 공간 생기면서 placeholer글씨 작아짐*/

  display: flex;
}

#query {
  font-size: 18px;
  font-weight: bold;
  padding: 10px;
  border: none; 
  outline: none;
  /* input 태그에 포커스가 맞춰졌을 때 이를 표현하기 위한 바깥선
    none / 0으로 바꾸면 포커싱할 때 잡히던 바깥선 사라짐*/

    flex-basis: 92%; /* placeholer 옆에 딱 붙어있던 돋보기가 멀어진다*/
}

#search-btn {

  flex-basis: 8%;
  background-color: transparent; /* 돋보기 배경을 투명하게 */
  border: none;
  font-size: 20px;
  color: #455ba8;
  cursor: pointer; /* 돋보기에 커서 갖다대면 손 모양 나오게 */
}

/* nav 영역 */
nav {
  height: 50px;
  border-bottom: 2px solid black; /* nav 아래쪽에 진한 까만 줄 넣기 */
  position: sticky; 
  /*
  sticky: 특정 스크롤 위치에 도달했을 때부터 요소가 고정되는 효과를 주는데 사용
          - 평소에는 HTML상 자신의 원래 위치에 위치함
            요소가 특정 위치에 도달 시 fixed로 변함

            top, bottom, left, right 속성이 필수로 작성 되어야 함.
            -> 임계점 도달 시 어느 위치에 부착해서 고정할지 정해야 하기 때문.
  */
  top: 0;
  background-color: white;
}

/* 목록 표기법을 없앰 : li 말고 부모인 ul / ol 에 사용 */
nav > ul {
  list-style: none;
  display: flex; /* 기본으로 row였던 nav를 오른쪽으로 나열되게 만듦*/
  margin: 0;
  padding: 0;
  height: 100%; /* ul 태그들이 아래로 넓어짐*/
}

nav li {
  flex-basis: 150px; /* 각 nav들 칸이 150px씩 넓어짐 */
}

nav a {
  text-decoration: none; /* text-decoration: a 태그 밑줄, none 하면 밑줄 사라짐 */
  font-size: 18px;
  font-weight: bold;
  color: black;
  display: block; /*wight, height 적용 안 되기 때문에 inline을 block으로 바꿔줘야 함*/
  height: 100%;

  text-align: center; /* text 좌우 정렬 (상하는 안 됨) */
  line-height: 50px; /* nav 높이 50px로 설정했기 때문에 똑같은 px로 설정, 그래야 상하도 가운데로 정렬*/

  transition-duration: 0.2s; /* 마우스 올릴 때 0.2초 안에 색이 변함(스무스하게 색이 변함) */
  border-radius: 5px;
}
/* a태그에 마우스 올려뒀을 때 효과 추가 */
nav a:hover {
  background-color: #455ba8;
  color: white;
}

/* content 영역 */
.content {
  height: 800px;
  display: flex;
}

.content-1 {flex-basis: 70%;} /* 비어있는 메인창이 차지하는 넓이 */
.content-2 {flex-basis: 30%;} /* 로그인 창이 차지하는 넓이 */

/* login 스타일 */
form[name="login-form"] {
  height: 130px;
  margin-top: 20px; /* 위쪽에만 여백 20px줌 */
  display: flex;
  flex-direction: column; /* 아이디 저장 글씨가 비밀번호 아래에 오게끔*/
}

#id-pw-area {
  flex-basis: 70%; 
  display: flex; /* 로그인 버튼이 아이디 비밀번호 옆에 오게끔 */
  margin: 0;
  padding: 0;
  border: 1px solid #ddd; 
}

/* 아이디 비밀번호 칸 */
#id-pw-area > section:first-child {
  flex-basis: 75%;
  display: flex; /* 열방향으로 메인축 바꿈*/
  flex-direction: column;
}

/* 로그인 칸 */
#id-pw-area > section:last-child {
  flex-basis: 25%;
}

/* 아이디 비번 인풋 박스 한 번에 선택할 때  id-pw-area의 후손인 input으로 쓰기 */
#id-pw-area input {
  border: none;
  outline: none;
  padding: 5px;
  flex-basis: 50%;
  border-right: 1px solid #ddd;
}

#id-pw-area input:first-child {
  border-bottom: 1px solid #ddd; /* 아이디와 비번 사이에 줄 생기게 하기 (last-child border-top으로 해도 됨 */
}

#id-pw-area input:focus {
  border: 2px solid #455ba8; /* 각 아이디 비번 창 포커스 시 파란 테두리 생김 */
}

/* 로그인 버튼 */
#id-pw-area button {
  width: 100%;   /* 로그인 버튼 꽉 차게 만듦 */
  height: 100%;
  border: none;
  background-color: transparent;
  cursor: pointer;
}

/* button 태그에 마우스 올려뒀을 때 효과 추가 */
#id-pw-area button:hover {
  background-color: #455ba8;
  color: white;
}

/* 아이디 저장 */
form[name="login-form"] > label {
  flex-basis: 30%;

  margin-top: 10px;
  font-size: 14px;
}

/* 회원가입, ID / PW 찾기 영역 */
#signup-find-area {
  margin-left: 10px;
}

#signup-find-area > a {
  color: black;
  text-decoration: none;
  font-size: 14px;
}

#signup-find-area > span {
  padding: 0 10px;
}

/* footer 영역 */
footer {
  height: 200px;
  background-color: #a3add342;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

footer > p {
  font-weight: bold;
}

footer > section > * {
  font-size: 14px;
}

footer a {
  color: black;
  text-decoration: none;
}

footer span {
  padding: 0 10px;
}

/* 반응형 : @media 
  @ : CSS at-rule, 특정 조건이나 규칙에 따라서
      스타일을 적용할 수 있게 해주는 CSS 명령어

  @media : 미디어 쿼리 - 특정 조건(ex. 화면 크기)에 따라
                        다른 스타일을 적용할 수 있게 해줌
*/

@media all and (max-width: 767px) {
  /* 반응형 모바일 기준
    - 해상도 767px 이하면 이 중괄호 내에 작성된 css 코드를 적용해라 
  */

  main {
  width: 100vw; /* (viewport width) - 디바이스(viewport)의 너비 전체 */
  }

  header {
    display: none;
  }

  nav {
    width: 100%;
    border-bottom: none;
    height: auto; 
    /* 가로로 정렬돼 작은 칸에 세로로 나열할 시
      목록들이 찌부되므로 자유롭게 칸이 넓어지게 설정 (auto)*/
    position: sticky; 
    top: 0;
  }

  nav > ul {
    flex-direction: column;
  }

  nav li {
    flex-basis: auto; /* 기본적으로 가지고 있던 사이즈 유지 */
    border-bottom: 1px solid #ddd;
  }


/* 태블릿 기준 */
@media all and (min-width: 768px) and (max-width:1023px) {
/* 스타일 css 코드 입력 */
/* 해상도 768px 이상, 1023 이하면 이 중괄호 내에 작성된 css 코드를 적용해라 */
}

.content {
  flex-direction: column;
}

footer > * {
  font-size: 12px;
}

.content-2 {
  padding: 20px;
}

}




